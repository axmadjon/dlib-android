apply plugin: "com.android.library"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        ndk {
            // "x86", "x86_64", "armeabi", "armeabi-v7a", "arm64-v8a"
            abiFilters "x86", "x86_64", "armeabi", "armeabi-v7a", "arm64-v8a"
        }
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_PLATFORM=android-16",
                          "-DANDROID_TOOLCHAIN=clang",
                          "-DANDROID_STL=c++_shared",
                          "-DANDROID_CPP_FEATURES=rtti exceptions"
                // Enables exception-handling support.
//                cppFlags "-fexceptions -std=c++11"
            }
        }
    }

    // Let gradle pack the shared library into apk.
    sourceSets {
        main {
            jniLibs.srcDirs = ["src/main/cppLibs/dlib/lib",
                               "src/main/cppLibs/protobuf/lib"]
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    // Pick first STL shared library if there're duplicate files in the
    // dependent module.
    packagingOptions {
        pickFirst "**/libc++_shared.so"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

repositories {
    // Find the AAR files in the libs folder.
    flatDir { dirs "libs" }
}

dependencies {
    compile fileTree(dir: "libs", include: ["*.jar"])

    testCompile rootProject.ext.dep.testJunit
}
